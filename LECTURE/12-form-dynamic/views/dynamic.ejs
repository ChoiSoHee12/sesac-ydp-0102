<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <!-- jQuery CDN (ajax 간편하게 사용하고자 불러옴) -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" 
    integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" 
    crossorigin="anonymous"></script>

     <!-- Axios CDN -->
     <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js">
     </script>
</head>
<body>
    <h1><%= title %></h1>

    <form name="register">
        <label for="name">이름</label>
        <input type="text" name="name" id="name" required>
        <br>

        <span>성별</span>

    <!-- <input type="radio" name="gender" id="male"> : 선택하면 on이라고만 뜸-->
    <input type="radio" name="gender" value="남자" id="male" required>
    <label for="male">남자</label>
    <!-- <input type="radio" name="gender" id="female"> : 선택하면 on이라고만 뜸 -->
    <input type="radio" name="gender" value="여자" id="female">
    <label for="female">여자</label>

    <!-- radio에서 required 적용의 경우 같은 name늘 갖는 하나에만 적용해주면 됨. -->
    <br>

    <button type="button" onclick="ajaxGet();">ajax get 방식 요청</button>
    <button type="button" onclick="ajaxPost();">ajax post 방식 요청</button>
    <button type="button" onclick="axiosGet();">axios get 방식 요청</button>
    <button type="button" onclick="axiosPost();">axios post 방식 요청</button>
    <button type="button" onclick="fetchGet();">fetch get 방식 요청</button>
    <button type="button" onclick="fetchPost();">fetch post 방식 요청</button>
    </form>
<button onclick="getTodos();">외부 API를 이용해 TODO 불러오기></button>
<!-- 외부 API: 외부에서 가지고 와서 쓰겠다! ex) 날씨 정보 API, 영화 API 이런 식으로 검색. -->
    <div class="result"></div>
    <script>
        const resultBox = document.querySelector('.result');

        function getTodos() {
            fetch('https://jsonplaceholder.typicode.com/todos/10')
            .then(res => res.json())
            .then(json => {
                console.log(json)
                resultBox.textContent = `${json.title} (${json.completed ? 'done' : 'doing'})`
            })
        }

        // ============================================================== //
        
        function ajaxGet() {
            console.log('click ajaxGet btn!');

            // 폼 선택하기
            const form = document.forms['register'];

            // 폼 요소의 값을 추출하기
            console.dir(form);
            console.dir(form.name);
            console.dir(form.gender); // value 지정해야 함.
            console.log(form.name.value); // 이름 input에 작성된 문자열
            console.log(form.gender.value); // 성별 input이 선택된 값

            // 서버로 보낼 데이터 양식 생성하기
            const data = {
                name: form.name.value,
                gender: form.gender.value
            };

            // ajax 비동기 통신 (GET 방식)
            // (서버의 index.js 파일로 유저가 브라우저에 입력한 값을 보내기)
            $.ajax({
                type: 'GET',
                url: '/ajax', // 이 요청을 받을 "서버 측 경로"
                data, // data: data // data: { name: form.name.value, gender: form.gender.value }
                success: function (data) { 
                    console.log(data); // {name: '션', gender: '남자'}
                

        //         // 404 err why? : client error 
        //         // ajax는 나한테 없는 요청을 보내고 있어!

        //         // (설정 후) =>

                resultBox.textContent 
                        = `GET /ajax 요청에 대한 응답 완료! ${data.name}님은 ${data.gender}이시죠?ㅎㅎ`;
                    resultBox.style.color = 'blue';
                }

            });
        }

        // ajax 비동기 통신 (POST 방식)

        function ajaxPost() {
            console.log('click ajaxPost btn!');

            // 폼 선택하기
            const form = document.forms['register'];

            // 서버로 보낼 데이터 양식 생성하기
            const data = {
                name: form.name.value,
                gender: form.gender.value
            };

        $.ajax({
                type: 'POST',
                url: '/ajax',
                data, // data: data
                success: function (data) {
                    console.log(data)
                    resultBox.textContent 
                        = `POST /ajax 요청에 대한 응답 완료! ${data.name}님은 ${data.gender}이시죠?ㅎㅎ`;
                    resultBox.style.color = 'red';
                }            
            });

        }

        // ============================================= //

        // axios 비동기 통신 (get 방식)
        
        axios({
                method: 'GET',
                // i) params 키를 이용하지 않는다면 요청 url에 query string을 작성
                url: `/axios?name${form.name.value}&gender=${form.gender.value}`,
                // ii) params 키를 이용하는 경우 
                // url: '/axios',
                // params: data,
            }).then(function (res) {
                console.log(res); // 서버의 응답 결과를 부가적인 정보와 함께 출력
                console.log(res.data); // index.js의 res.send(req.query) 그 데이터가 담김
                // console.log(res.status); // HTTP Status code (상태코드)
                // console.log(res.statusText);
                // console.log(res.headers)
                // console.log(res.config) // 응답의 설정

                // 구조 분해 할당
                const { name, gender } = res.data; // {name: '션', gender: '남자'}
                resultBox.textContent 
                    = `GET /axios 요청에 대한 응답 완료! ${name}님은 ${gender}이시죠?ㅎㅎ`;
                resultBox.style.color = 'green';
            })

            
        
    </script>
</body>
</html>